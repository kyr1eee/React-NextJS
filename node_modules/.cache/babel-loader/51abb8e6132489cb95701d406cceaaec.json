{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport React from \"react\";\nimport { withRouter } from 'next/router';\nimport Link from 'next/link';\nimport { Children } from 'react';\n\nvar ActiveLink = function ActiveLink(_ref) {\n  var children = _ref.children,\n      router = _ref.router,\n      props = _objectWithoutProperties(_ref, [\"children\", \"router\"]);\n\n  // 验证children是否只有一个子节点，有则返回它，否则抛出错误\n  var child = Children.only(children);\n  var className = child.props.className || null;\n\n  if (router.pathname === props.href && props.activeClassName) {\n    className = \"\".concat(className !== null ? className : '', \" \").concat(props.activeClassName).trim();\n  }\n\n  delete props.activeClassName; // 以 element 元素为样板克隆并返回新的 React 元素。返回元素的 props 是将新的 props 与原始元素的 props 浅层合并后的结果\n\n  return React.createElement(Link, props, React.cloneElement(child, {\n    className: className\n  }));\n}; // 注入router参数\n\n\nexport default withRouter(ActiveLink);","map":null,"metadata":{},"sourceType":"module"}